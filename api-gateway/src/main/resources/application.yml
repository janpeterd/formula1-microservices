server:
  port: 8083

logging:
  level:
    root: INFO
    org.springframework.cloud.gateway: INFO
    org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator: INFO
    reactor.netty: INFO
    org.springframework.security: TRACE

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENTID}
            client-secret: ${GOOGLE_CLIENTSECRET}
            scope: openid,profile,email
      resourceserver:
        jwt:
          issuer-uri: https://accounts.google.com
          jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
  cloud:
    gateway:
      routes:
        - id: driver-service-get-all
          uri: http://${DRIVER_SERVICE_BASEURL:localhost:8081}
          predicates:
            - Path=/drivers
            - Method=GET
          filters:
            - SetPath=/api/driver
        - id: gp-service-get-all
          uri: http://${GP_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/gps
          filters:
            - SetPath=/api/gp
        - id: gp-service-get-by-code
          uri: http://${GP_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/gp/{gpCode}
          filters:
            - SetPath=/api/gp/{gpCode}
        - id: gp-service-post
          uri: http://${GP_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/gps
            - Method=POST
          filters:
            - SetPath=/api/gp
        - id: gp-service-put
          uri: http://${GP_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/gps/{gpCode}
            - Method=PUT
          filters:
            - SetPath=/api/gp/{gpCode}
        - id: gp-service-delete
          uri: http://${GP_SERVICE_BASEURL:localhost:8082}
          predicates:
            - Path=/gps/{gpCode}
            - Method=DELETE
          filters:
            - SetPath=/api/gp/{gpCode}
        - id: team-service-get-all
          uri: http://${TEAM_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/teams
            - Method=GET
          filters:
            - SetPath=/api/team
        - id: team-service-get-by-code
          uri: http://${TEAM_SERVICE_BASEURL:localhost:8080}
          predicates:
            - Path=/team/{teamCode}
          filters:
            - SetPath=/api/team/{teamCode}
        - id: get-image-service
          uri: http://${IMAGE_SERVICE_BASEURL:localhost:8084}
          predicates:
            - Path=/images/**
            - Method=GET
          filters:
          - PreserveHostHeader
        - id: image-service-post
          uri: http://${IMAGE_SERVICE_BASEURL:localhost:8084}
          predicates:
            - Path=/images
            - Method=POST
          filters:
            - SetPath=/images/upload
